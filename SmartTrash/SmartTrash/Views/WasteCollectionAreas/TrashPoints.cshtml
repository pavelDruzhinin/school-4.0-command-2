@model SmartTrash.Models.WasteCollectionArea
@{
    var formHeader = Model == null ? "Добавление точки" : "Редактирование";
    var formButton = Model == null ? "Добавить" : "Сохранить";
    ViewData["Title"] = formHeader;
}
<h1>@formHeader</h1>
<form class="form" asp-action="Save" method="post">
    <input asp-for="Id" hidden />
    <div class="form-group">
        <label asp-for="Name">Название</label>
        <input asp-for="Name" />
        <span asp-validation-for="Name" />
    </div>
    <div class="form-group">
        <label asp-for="Latitude">Широта</label>
        <input asp-for="Latitude" />
        <span asp-validation-for="Latitude" />
    </div>
    <div class="form-group">
        <label asp-for="Longitude">Долгота</label>
        <input asp-for="Longitude" />
        <span asp-validation-for="Longitude" />
    </div>
    <div class="form-group">
        <label asp-for="Volume">Объём</label>
        <input asp-for="Volume" />
        <span asp-validation-for="Volume" />
    </div>
    @if (Model != null)
    {
        <input asp-for="FilledVolume" hidden />
    }
    <input class="btn btn-success" type="submit" value=@formButton>
</form>

@section scripts{
    <partial name="_ValidationScriptsPartial" />

    <script>
        // переопределение валидации на стороне клиента
        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
    </script>

}